package com.seven20.pe.problems;

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

import static org.junit.Assert.*;

import org.junit.Test;

import com.seven20.utils.math.Fibonacci;

public class ProblemTwo_Test {

	@Test
	public void test() {
		final int MAX = 4000000;
		int fib = 0;
		int pos = 3;
		int result = 0;

		while (true) {
			fib = Fibonacci.intAtPos(pos);
			if (fib < MAX) {
				result += fib;
				pos += 3;
			} else {
				break;
			}
		}
		assertEquals(4613732, result);
	}

	@Test
	public void testWithModulus() {
		final int MAX = 4000000;
		int fib = 0;
		int pos = 3;
		int result = 0;

		while (fib < MAX) {
			fib = Fibonacci.intAtPos(pos++);
			if (fib % 2 == 0) {
				result += fib;
			}
		}
		assertEquals(4613732, result);
	}

}
